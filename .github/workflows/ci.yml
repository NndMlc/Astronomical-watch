name: CI

on:
  pull_request:
  push:
    branches: [ main, feature/core-skeleton ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest


on:
  push:
    branches: [ main, feat/frontend-tests ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            requirements.txt

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run tests
        run: |
            pytest -q --junitxml=test-results/junit.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.python-version }}
          path: test-results/junit.xml

  coverage:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Run tests
        run: pytest -q
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install coverage
      - name: Coverage run
        run: |
          coverage run -m pytest
          coverage xml
          coverage report
      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

